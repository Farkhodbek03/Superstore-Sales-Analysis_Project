-- Superstore Sales Analysis (Portafoio Project): A Data-Driven Approach to Business Insights

-- Data Exploration

-- Count the total number of orders in the dataset.
SELECT COUNT(`Order ID`) AS Total_Orders
FROM superstore_sales;


-- Find the total sales and profit generated by the company.
SELECT SUM(Sales) AS Total_Sales, SUM(Profit) AS Total_Profit
FROM superstore_sales;


-- List all unique categories and sub-categories of products.
SELECT DISTINCT Category, `Sub-Category`
FROM superstore_sales;


 -- Business Insights
 
-- Identify the top 5 customers who generated the highest sales.
SELECT `Customer Name`, ROUND(SUM(Sales), 1) AS Total_Sales
FROM superstore_sales
GROUP BY `Customer Name`
ORDER BY Total_Sales DESC
LIMIT 5;

-- Find the top 3 most profitable product categories.
SELECT Category, ROUND(SUM(Profit), 1) AS Total_Profit
FROM superstore_sales
GROUP BY Category
ORDER BY Total_Profit DESC
LIMIT 3;


-- Determine the region with the highest sales.
SELECT Region, ROUND(SUM(Sales), 1) AS Total_Sales
FROM superstore_sales
GROUP BY Region
ORDER BY Total_Sales DESC
LIMIT 1;

-- Determine the region with the lowest sales.
SELECT Region, ROUND(SUM(Sales), 1) AS Total_Sales
FROM superstore_sales
GROUP BY Region
ORDER BY Total_Sales ASC
LIMIT 1;

 -- Performance Analysis
 
-- Calculate the average discount rate applied across all orders.
SELECT ROUND(AVG(Discount), 1) AS Average_Discount
FROM superstore_sales;


-- Find the percentage of orders that were shipped late.
SELECT (COUNT(CASE WHEN DATEDIFF(`Ship Date`, `Order Date`) > 5 THEN 1 END) * 100.0 / COUNT(*)) AS Late_Shipment_Percentage
FROM superstore_sales;


-- Identify the month with the highest sales.
SELECT MONTHNAME(`Order Date`) AS Month, ROUND(SUM(Sales), 1) AS Total_Sales
FROM superstore_sales
GROUP BY Month
ORDER BY Total_Sales DESC
LIMIT 3;


-- Advanced Analysis

-- Find the correlation between discounts and profits.
WITH DiscountProfitStats AS (
    SELECT 
        COUNT(*) AS n,
        SUM(Discount) AS sum_discount,
        SUM(Profit) AS sum_profit,
        SUM(Discount * Profit) AS sum_discount_profit,
        SUM(Discount * Discount) AS sum_discount_squared,
        SUM(Profit * Profit) AS sum_profit_squared
    FROM superstore_sales
)
SELECT 
    (n * sum_discount_profit - sum_discount * sum_profit) /
    SQRT((n * sum_discount_squared - POW(sum_discount, 2)) * (n * sum_profit_squared - POW(sum_profit, 2))) AS Correlation
FROM DiscountProfitStats;


-- Identify any products that resulted in a loss.
SELECT `Product ID`, `Product Name`, Category, `Sub-Category`, SUM(Profit) AS Total_Loss
FROM superstore_sales
WHERE Profit < 0
GROUP BY `Product ID`, `Product Name`, Category, `Sub-Category`
ORDER BY Total_Loss ASC;

-- Create a report showing the total sales, profit, and number of orders for each customer segment.
SELECT Segment, COUNT(*) AS Number_Of_Orders, ROUND(SUM(Sales), 1) AS Total_Sales, ROUND(SUM(Profit), 1) AS Total_Profit
FROM superstore_sales
GROUP BY Segment;
